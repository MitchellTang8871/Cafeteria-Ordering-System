/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.oodj_assignment;

import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public final class EditMenu extends javax.swing.JFrame {

    String user;
    String role;
    String uName;
    
    /**
     * Creates new form EditMenu
     */
    public EditMenu() {
        initComponents();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                LBLCurrentDate.setText(LocalDate.now().toString());
            }
        });
        loadTB();
    }

    public EditMenu(String id, String usr, String rl) {
        initComponents();
        user = id;
        uName = usr;
        role = rl;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                LBLCurrentDate.setText(LocalDate.now().toString());
                LBLuser.setText("User : "+uName+" ("+role+")");
            }
        });
        loadTB();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LBLCurrentDate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBmenu = new javax.swing.JTable();
        CBcategory = new javax.swing.JComboBox<>();
        TFiName = new javax.swing.JTextField();
        TFiPrice = new javax.swing.JTextField();
        BTNadd = new javax.swing.JButton();
        BTNdel = new javax.swing.JButton();
        BTNback = new javax.swing.JButton();
        BTNclear = new javax.swing.JButton();
        LBLuser = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LBLCurrentDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LBLCurrentDate.setText("yyyy-mm-dd");

        jLabel6.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Edit Menu");

        TBmenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBmenu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TBmenuKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(TBmenu);

        CBcategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Food", "Beverage" }));
        CBcategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBcategoryItemStateChanged(evt);
            }
        });

        TFiName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TFiNameKeyPressed(evt);
            }
        });

        TFiPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TFiPriceKeyPressed(evt);
            }
        });

        BTNadd.setText("Add");
        BTNadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNaddActionPerformed(evt);
            }
        });

        BTNdel.setText("Delete");
        BTNdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNdelActionPerformed(evt);
            }
        });

        BTNback.setText("Back");
        BTNback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNbackActionPerformed(evt);
            }
        });

        BTNclear.setText("Clear");
        BTNclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNclearActionPerformed(evt);
            }
        });

        LBLuser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LBLuser.setText("User : null (null)");

        jLabel1.setText("Category :");

        jLabel2.setText("Name :");

        jLabel3.setText("Price :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(LBLuser, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LBLCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(BTNback))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(CBcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(TFiName, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(TFiPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BTNdel)
                        .addGap(18, 18, 18)
                        .addComponent(BTNclear)
                        .addGap(18, 18, 18)
                        .addComponent(BTNadd)))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLuser)
                    .addComponent(LBLCurrentDate))
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFiName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFiPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BTNdel)
                    .addComponent(BTNclear)
                    .addComponent(BTNadd))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(BTNback)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String getMenuFile(){
        String mf=null;
        if (CBcategory.getSelectedIndex()==0) {
            mf = "food";
        }
        if (CBcategory.getSelectedIndex()==1) {
            mf = "beverage";
        }
        return mf;
    }
    
    void fillTable(ArrayList<ArrayList<String>> menu){
        DefaultTableModel model = (DefaultTableModel)TBmenu.getModel();
        model.setRowCount(0);
            for(int i = 0; i<menu.size(); i++){
                Object[] row = {menu.get(i).get(0),menu.get(i).get(1)};
                model.addRow(row);
            }
    }
    
    void clear(){
        TFiName.setText("");
        TFiPrice.setText("");
        Menu m = new Menu();
        fillTable(m.getMenu(getMenuFile()));
    }
    
    void loadTB(){
        Menu m = new Menu();
        fillTable(m.getMenu(getMenuFile()));
    }
    
    void add(){
        if ("".equals(TFiName.getText()) || "".equals(TFiPrice.getText())) {
            JOptionPane.showMessageDialog(null,"Please fill in the details.","Alert",JOptionPane.WARNING_MESSAGE);
        }
        else{
            try {
                float iPrice = Float.parseFloat(TFiPrice.getText());
                if (iPrice<0) {
                    JOptionPane.showMessageDialog(null,"Invalid Item Price amount(less than 0).","Alert",JOptionPane.WARNING_MESSAGE);
                }
                else{
                    TFiPrice.setText(String.format("%.2f",iPrice));
                    Menu m = new Menu(user);
                    m.addMenuItem(getMenuFile(), TFiName.getText(), TFiPrice.getText());
                    clear();
                    loadTB();
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null,"Invalid Item Price format.","Alert",JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    void del(){
        DefaultTableModel model = (DefaultTableModel)TBmenu.getModel();
        if (TBmenu.getSelectedRowCount()==1) {
            String[] itemDeleted = new String[2];
            itemDeleted[0]=(String) TBmenu.getValueAt(TBmenu.getSelectedRow(), 0);
            itemDeleted[1]=(String) TBmenu.getValueAt(TBmenu.getSelectedRow(), 1);
            model.removeRow(TBmenu.getSelectedRow());
            ArrayList<ArrayList<String>> menu = new ArrayList<>();
            for (int i = 0; i < TBmenu.getRowCount(); i++){
                ArrayList<String> line = new ArrayList<>();
                for (int j = 0; j < TBmenu.getColumnCount(); j++){
                    line.add((String) model.getValueAt(i, j));
                }
                menu.add(line);
            }
            Menu m = new Menu(user);
            m.saveDel(getMenuFile(),itemDeleted, menu);
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select single row for deletion.","Alert",JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void CBcategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBcategoryItemStateChanged
        Menu m = new Menu();
        fillTable(m.getMenu(getMenuFile()));
    }//GEN-LAST:event_CBcategoryItemStateChanged

    private void BTNbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNbackActionPerformed
        this.setVisible(false);
        new StaffMenu(user,uName,role).setVisible(true);
    }//GEN-LAST:event_BTNbackActionPerformed

    private void BTNaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNaddActionPerformed
        add();
    }//GEN-LAST:event_BTNaddActionPerformed

    private void BTNclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNclearActionPerformed
        clear();
    }//GEN-LAST:event_BTNclearActionPerformed

    private void TFiNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFiNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            add();
        }
    }//GEN-LAST:event_TFiNameKeyPressed

    private void TFiPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFiPriceKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            add();
        }
    }//GEN-LAST:event_TFiPriceKeyPressed

    private void BTNdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNdelActionPerformed
        del();
    }//GEN-LAST:event_BTNdelActionPerformed

    private void TBmenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TBmenuKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_DELETE){
            del();
        }
    }//GEN-LAST:event_TBmenuKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNadd;
    private javax.swing.JButton BTNback;
    private javax.swing.JButton BTNclear;
    private javax.swing.JButton BTNdel;
    private javax.swing.JComboBox<String> CBcategory;
    private javax.swing.JLabel LBLCurrentDate;
    private javax.swing.JLabel LBLuser;
    private javax.swing.JTable TBmenu;
    private javax.swing.JTextField TFiName;
    private javax.swing.JTextField TFiPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
