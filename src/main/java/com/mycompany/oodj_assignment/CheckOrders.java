package com.mycompany.oodj_assignment;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Asus
 */
public final class CheckOrders extends javax.swing.JFrame {
    String user;
    String role;
    String uName;
    
    /**
     * Creates new form Check_orders
     */
    public CheckOrders() {
        initComponents();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                LBLCurrentDate.setText(LocalDate.now().toString());
            }
        });
        loadTB();
    }
    
    public CheckOrders(String id, String usr, String rl) {
        initComponents();
        user = id;
        uName = usr;
        role = rl;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                LBLCurrentDate.setText(LocalDate.now().toString());
                LBLuser.setText("User : "+uName+" ("+role+")");
            }
        });
        loadTB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TBorder = new javax.swing.JTable();
        BTNback = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        LBLCurrentDate = new javax.swing.JLabel();
        LBLuser = new javax.swing.JLabel();
        CBstatus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TBorder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order by (ID)", "Date", "Total (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBorder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBorderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TBorder);

        BTNback.setText("Back");
        BTNback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNbackActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Check Orders");

        LBLCurrentDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LBLCurrentDate.setText("yyyy-mm-dd");

        LBLuser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LBLuser.setText("User : null (null)");

        CBstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Paid" }));
        CBstatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBstatusItemStateChanged(evt);
            }
        });

        jLabel1.setText("Status :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LBLuser, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LBLCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BTNback))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CBstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLuser)
                    .addComponent(LBLCurrentDate))
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CBstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BTNback)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void loadTB(){
        Order o = new Order(user,role);
        fillTable(o.getOrders());
    }
    
    void fillTable(ArrayList<ArrayList<String>> orders){
        String status = null;
        if (CBstatus.getSelectedIndex()==0) {
            status = "Pending";
        }
        if (CBstatus.getSelectedIndex()==1) {
            status  = "Paid";
        }
        ArrayList<ArrayList<String>> filOrders = new ArrayList<>();
        for (int i = 0; i < orders.size(); i++){
                ArrayList<String> order = orders.get(i);
                if (order.get(4).equals(status)) {
                    filOrders.add(order);
                }
            }
        DefaultTableModel model = (DefaultTableModel)TBorder.getModel();
        model.setRowCount(0);
        for(int i = 0; i<filOrders.size(); i++){
            ArrayList<String> order = filOrders.get(i);
            Object[] row = {order.get(0),order.get(1),order.get(2),order.get(3)};
            model.addRow(row);
        }
    }
    private void CBstatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBstatusItemStateChanged
        Order o = new Order(user,role);
        fillTable(o.getOrders());
    }//GEN-LAST:event_CBstatusItemStateChanged

    private void BTNbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNbackActionPerformed
        this.setVisible(false);
        switch (role) {
                            case "root" -> new StaffMenu(user,uName,role).setVisible(true);
                            case "Manager" -> new StaffMenu(user,uName,role).setVisible(true);
                            case "Customer" -> new CusMenu(user,uName,role).setVisible(true);
                        }
    }//GEN-LAST:event_BTNbackActionPerformed

    private void TBorderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBorderMouseClicked
        if (evt.getClickCount() == 2) {
            String oid=(String) TBorder.getValueAt(TBorder.getSelectedRow(), 0);
            new OrderDetail(user,uName,role,oid).setVisible(true);
        }
    }//GEN-LAST:event_TBorderMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNback;
    private javax.swing.JComboBox<String> CBstatus;
    private javax.swing.JLabel LBLCurrentDate;
    private javax.swing.JLabel LBLuser;
    private javax.swing.JTable TBorder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
